{"version":3,"file":"static/js/367.143c1d30.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/NumberList/NumberList.module.css?fddf","components/NumberList/ItemList.js","components/NumberList/NumberList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","page/ContactPage.js"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\",\"label__title\":\"ContactForm_label__title__aUEX9\",\"input__form\":\"ContactForm_input__form__lOKgj\",\"form__button\":\"ContactForm_form__button__MT1Jk\"};","import { useState, useRef } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux-store/contacts/operetions';\n\nimport style from './ContactForm.module.css';\n\nfunction FormNumber() {\n  const item = useSelector(state => state.contacts.contacts.items);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const idName = useRef(nanoid()).current;\n  const idNumber = useRef(nanoid()).current;\n  const dispatch = useDispatch();\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n\n    const formName = e.currentTarget.name.value;\n    const formNumber = e.currentTarget.number.value;\n\n    if (item.filter(e => e.name === formName).length !== 0) {\n      alert(`${formName}is already in contacts.`);\n      return;\n    }\n    const id = nanoid();\n    const numberInfo = {\n      id,\n      name: formName,\n      number: formNumber,\n    };\n    dispatch(addContact(numberInfo));\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={onSubmitForm} className={style.container}>\n      <label htmlFor={idName} className={style.label__title}>\n        Name\n      </label>\n      <input\n        id={idName}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={e => {\n          setName(e.target.value);\n        }}\n        className={style.input__form}\n      />\n      <label htmlFor={idNumber} className={style.label__title}>\n        Number{' '}\n      </label>\n      <input\n        id={idNumber}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n        onChange={e => {\n          setNumber(e.target.value);\n        }}\n        className={style.input__form}\n      />\n      <button type=\"submit\" className={style.form__button}>\n        Add contatc\n      </button>\n    </form>\n  );\n}\n\nexport default FormNumber;","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"NumberList_title__t2x3B\",\"list\":\"NumberList_list__1uz-h\",\"item\":\"NumberList_item__XFNts\",\"button__delete\":\"NumberList_button__delete__eTtW9\"};","import PropTypes from 'prop-types';\nimport style from './NumberList.module.css';\n\nfunction ItemList({ id, name, number, deleteContact }) {\n  return (\n    <li key={id} className={style.item}>\n      <div>\n        {name}, {number}\n      </div>\n      <button\n        className={style.button__delete}\n        onClick={() => {\n          deleteContact(id);\n        }}\n      >\n        {' '}\n        Delete{' '}\n      </button>\n    </li>\n  );\n}\n\nexport default ItemList;\n\nItemList.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import ItemList from './ItemList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchItem, deleteContact } from 'redux-store/contacts/operetions';\n\nimport style from './NumberList.module.css';\n\nfunction NumberList() {\n  const item = useSelector(state => state.contacts.contacts.items);\n  const isLoading = useSelector(state => state.contacts.contacts.isLoading);\n  const filter = useSelector(state => state.contacts.filter.toLowerCase());\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchItem());\n  }, [dispatch]);\n\n  const visibleContact = !isLoading\n    ? item.filter(contact => contact.name.toLowerCase().includes(filter))\n    : [];\n\n  return (\n    <>\n      <div className={style.title}>Contacts</div>\n      <ul className={style.list}>\n        {isLoading ? (\n          <div className={style.title}>Loading...</div>\n        ) : (\n          visibleContact.map(e => {\n            return (\n              <ItemList\n                key={e.id}\n                id={e.id}\n                name={e.name}\n                number={e.number}\n                deleteContact={() => {\n                  dispatch(deleteContact(e.id));\n                }}\n              />\n            );\n          })\n        )}\n      </ul>\n    </>\n  );\n}\n\nexport default NumberList;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__L5eml\",\"title\":\"Filter_title__pSkfx\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux-store/contacts/contactsSlice';\n\nimport style from './Filter.module.css';\n\nfunction Filter() {\n  const filter = useSelector(state => state.contacts.contacts.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={style.container}>\n      <h3 className={style.title}>Find contact by name</h3>\n      <input\n        className={style.input}\n        type=\"text\"\n        name=\"filter\"\n        onChange={e => dispatch(filterContacts(e.currentTarget.value))}\n        value={filter}\n      />\n    </div>\n  );\n}\n\nexport default Filter;\n","import React from 'react';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport NumberList from 'components/NumberList/NumberList';\nimport Filter from 'components/Filter/Filter';\n\nimport style from 'App.module.css';\n\nconst ContactPage = () => {\n  return (\n    <div>\n      <h1 className={style.App__title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={style.App__title}>Contacts</h2>\n      <Filter />\n      <NumberList />\n    </div>\n  );\n};\n\nexport default ContactPage;\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","item","useSelector","state","contacts","items","useState","name","setName","number","setNumber","idName","useRef","current","idNumber","dispatch","useDispatch","reset","onSubmit","e","preventDefault","formName","currentTarget","value","formNumber","filter","length","numberInfo","addContact","alert","className","style","htmlFor","type","pattern","title","required","onChange","target","deleteContact","onClick","isLoading","toLowerCase","useEffect","fetchItem","visibleContact","contact","includes","map","filterContacts","ContactForm"],"sourceRoot":""}